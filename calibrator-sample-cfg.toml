# This is a sample of a config file for the vision subsystem (when running
# it with the `--cfg` flag).
# The config file is in the [toml](https://github.com/toml-lang/toml) format,

[VideoSource]
# Common options:
#   - `type`: stream, oni, pcd, am_offline
# `oni` and `pcd` types require an additional parameter: file_path
# `am_offline` type requires an additional parameters: dir_path
type = "oni"
file_path = "../videos/triangle.oni"

[FilteredVideoSource]
# type = simple|prob|pt1
type = "simple"

  # The following list of filters is optional
  # The order of the filters themselves IS NOT SIGNIFICANT.
  # [[FilteredVideoSource.filters]]
  #   type = "SensorCalibrationFilter"
  #   a = 1.0117
  #   b = -0.0100851

  [[FilteredVideoSource.filters]]
    type = "TruncateFilter"
    decimal_points = 2

# Available `observer` types: ObstacleDetector|SurfaceDetector|Recorder
#   ObstacleDetector requires *SplitStrategy*
#   TODO: complete description for *SurfaceDetector* requirements
#   Recorder requires RecordingOptions
[[observers]]
type = "CameraCalibrator"

[[observers]]
type = "LegacyVisualizer"

# [[observers]]
# type = "ARVisualizer"
#
#   [[observers.visualizer]]
#   data = "cloud"
#   width = 1024
#   height = 768
#
# [[observers]]
# type = "ARVisualizer"
#
#   [[observers.visualizer]]
#   data = "rgb"
#   width = 640
#   height = 480

# Uncomment if any information needs to be sent to the robot.
# [RobotService]
# ip = 192.168.0.7
# port = 61448
# # Delay is given in milliseconds. 0 is a valid value.
# delay = 10

# Uncomment in the presense of the robot
# [Robot]
# # The size of the "bubble" in which no modifications or deletions of objects
# # are sent to the robot. **In meters**
# bubble_size = 1.2

# [Visualization]
# # Whether the results are visualized **locally**
# # `cloud` = true|false ---- visualize the point cloud
# # `rgb` = true|false   ---- visualize the rgb image
# cloud = true
# rgb = false
